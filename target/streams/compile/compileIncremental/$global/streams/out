[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/roryquinlan/castles/src/main/scala/castles/resource/Resource.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/roryquinlan/castles/src/main/scala/castles/fiefdom/Fortress.scala, /Users/roryquinlan/castles/src/main/scala/castles/fiefdom/Resource.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(castles.resource.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(castles.resource.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/roryquinlan/castles/src/main/scala/castles/fiefdom/Fortress.scala, /Users/roryquinlan/castles/src/main/scala/castles/fiefdom/Resource.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 3 sources: invalidated sources (3) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 3 Scala sources to /Users/roryquinlan/castles/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.7:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.7:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 6c9a0f5b for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/classes:/Users/roryquinlan/.sbt/boot/scala-2.12.6/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/roryquinlan/castles/target/scala-2.12/classes:/Users/roryquinlan/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.5.jar:/Users/roryquinlan/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.5.jar:/Users/roryquinlan/.sbt/boot/scala-2.12.6/lib/scala-reflect.jar:/Users/roryquinlan/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.317854099 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from castles.resource.ResourceProducer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(castles.resource.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(castles.resource.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(castles.resource.ResourceProducer,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(creatorCount,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(add,[Default]), UsedName(hashCode,[Default]), UsedName(inventoryCount,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(produce,[Default]), UsedName(castles;resource;ResourceProducer;init;,[Default]), UsedName(productElement,[Default]), UsedName(clone,[Default]), UsedName(consume,[Default]), UsedName(ResourceProducer,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The castles.resource.ResourceProducer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(creatorCount,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(add,[Default]), UsedName(hashCode,[Default]), UsedName(inventoryCount,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(produce,[Default]), UsedName(castles;resource;ResourceProducer;init;,[Default]), UsedName(productElement,[Default]), UsedName(clone,[Default]), UsedName(consume,[Default]), UsedName(ResourceProducer,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(castles.resource.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from castles.fiefdom.Fortress...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(castles.fiefdom.Fortress)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(castles.fiefdom.Fortress)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(castles.fiefdom.Fortress,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(castleHeight,[Default]), UsedName(Fortress,[Default]), UsedName(hashCode,[Default]), UsedName(takeCastleDamage,[Default]), UsedName(synchronized,[Default]), UsedName(buildWall,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(productElement,[Default]), UsedName(buildCastle,[Default]), UsedName(wallHeight,[Default]), UsedName(takeDamage,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(castles;fiefdom;Fortress;init;,[Default]), UsedName(productIterator,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The castles.fiefdom.Fortress has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(castleHeight,[Default]), UsedName(Fortress,[Default]), UsedName(hashCode,[Default]), UsedName(takeCastleDamage,[Default]), UsedName(synchronized,[Default]), UsedName(buildWall,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(productElement,[Default]), UsedName(buildCastle,[Default]), UsedName(wallHeight,[Default]), UsedName(takeDamage,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(castles;fiefdom;Fortress;init;,[Default]), UsedName(productIterator,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(castles.fiefdom.Fortress)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from castles.fiefdom.ResourceProducer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(castles.fiefdom.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(castles.fiefdom.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(castles.fiefdom.ResourceProducer,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(creatorCount,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(add,[Default]), UsedName(hashCode,[Default]), UsedName(inventoryCount,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(produce,[Default]), UsedName(productElement,[Default]), UsedName(castles;fiefdom;ResourceProducer;init;,[Default]), UsedName(clone,[Default]), UsedName(consume,[Default]), UsedName(ResourceProducer,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The castles.fiefdom.ResourceProducer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(creatorCount,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(add,[Default]), UsedName(hashCode,[Default]), UsedName(inventoryCount,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(produce,[Default]), UsedName(productElement,[Default]), UsedName(castles;fiefdom;ResourceProducer;init;,[Default]), UsedName(clone,[Default]), UsedName(consume,[Default]), UsedName(ResourceProducer,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(castles.fiefdom.ResourceProducer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
